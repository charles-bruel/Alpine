#pragma kernel CullShader

struct Data
{
	float2 position;
	float scale;
};

StructuredBuffer<Data> input;
StructuredBuffer<uint> args;
AppendStructuredBuffer<Data> output;
float4x4 camera;

[numthreads(64,1,1)]
void CullShader(uint3 id : SV_DispatchThreadID)
{
	Data data = input[id.x];
	if (id.x < args[0]) {
		float4 temp = { data.position.x, 0, data.position.y, 1 };
		temp = mul(camera, temp);
		float3 final = { temp.x / temp.w, temp.y / temp.w, 0 };

		if (final.x > -1.05 && final.x < 1.05 && final.y > -1.05 && final.y < 1.05) {
			output.Append(data);
		}
	}
}
